// This file is part of olympus-xmp. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/olympus-xmp/master/COPYRIGHT. No part of olympus-xmp, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
// Copyright Â© 2022 The developers of olympus-xmp. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/olympus-xmp/master/COPYRIGHT.


use std::borrow::Cow;
use std::char::CharTryFromError;
use std::collections::TryReserveError;
use std::convert::Infallible;
use std::error;
use std::fmt;
use std::fmt::Debug;
use std::fmt::Display;
use std::fmt::Formatter;
use std::hint::unreachable_unchecked;
use std::marker::PhantomData;
use std::mem::size_of;
use std::ptr::NonNull;
use std::slice::from_raw_parts;
use std::str::from_utf8_unchecked;
use swiss_army_knife::a_to_z::a;
use swiss_army_knife::a_to_z::A;
use swiss_army_knife::a_to_z::F;
use swiss_army_knife::a_to_z::U;
use swiss_army_knife::a_to_z::Z;
use swiss_army_knife::a_to_z::_0;
use swiss_army_knife::a_to_z::_9;
use swiss_army_knife::a_to_z::b;
use swiss_army_knife::a_to_z::f;
use swiss_army_knife::a_to_z::n;
use swiss_army_knife::a_to_z::r;
use swiss_army_knife::a_to_z::t;
use swiss_army_knife::a_to_z::u;
use swiss_army_knife::a_to_z::Backslash;
use swiss_army_knife::a_to_z::Backspace;
use swiss_army_knife::a_to_z::CarriageReturn;
use swiss_army_knife::a_to_z::FormFeed;
use swiss_army_knife::a_to_z::LineFeed;
use swiss_army_knife::a_to_z::Period;
use swiss_army_knife::a_to_z::Space;
use swiss_army_knife::a_to_z::Slash;
use swiss_army_knife::a_to_z::Hash;
use swiss_army_knife::a_to_z::Tab;
use swiss_army_knife::a_to_z::DoubleQuote;
use swiss_army_knife::a_to_z::OpenAngleBracket;
use swiss_army_knife::a_to_z::Underscore;
use swiss_army_knife::a_to_z::Caret;
use swiss_army_knife::a_to_z::AtSign;
use swiss_army_knife::get_unchecked::GetUnchecked;
use swiss_army_knife::memchr::MemoryCharacter;
use swiss_army_knife::non_zero::new_non_null;
use super::BlankNodeLabel;
use super::FromUnchecked;
use super::PathDepth;
use super::Predicate;
use super::NaiveIetfBcp47LanguageTag;
use super::Subject;
use super::BackslashChar;
use super::CarriageReturnChar;
use super::DoubleQuoteChar;
use super::LineFeedChar;
use super::internationalized_resource_identifier::AbsoluteInternationalizedResourceIdentifier;
use super::internationalized_resource_identifier::AbsoluteInternationalizedResourceIdentifierParseError;
use utf8::InvalidUtf8ParseError;
use utf8::PercentDecodeError;
use utf8::is_ascii_byte;
use utf8::is_ascii_character;
use utf8::StringUtf8Encoding;
use utf8::to_lower_case_ascii_byte;
use utf8::Utf8CharacterLength;
use utf8::UnvalidatedDecodeUtf8Sequences;
use utf8::utf8_sequence::Utf8Sequence;
use utf8::utf8_sequence::Utf8Sequence1;
use utf8::utf8_sequence::Utf8Sequence2;
use utf8::utf8_sequence::Utf8Sequence3;
use utf8::utf8_sequence::Utf8Sequence4;
use utf8::utf8_sequence::Utf8SequenceAndCharacter;
use utf8::utf8_sequence::Utf8SequenceEnum;


pub(super) mod utf8;


include!("BlankNodeLabelParseError.rs");
include!("CommentParseError.rs");
include!("get_0.rs");
include!("GetUncheckedExt.rs");
include!("LiteralTag.rs");
include!("NaiveIetfBcp47LanguageTagParseError.rs");
include!("NTriple.rs");
include!("NTripleParseError.rs");
include!("NTriplesParseError.rs");
include!("Object.rs");
include!("ObjectParseError.rs");
include!("OutOfMemoryOrInvalidUtf8PercentDecodeParseError.rs");
include!("OutOfMemoryOrUCHARParseError.rs");
include!("PeriodParseError.rs");
include!("PredicateParseError.rs");
include!("StringLiteral.rs");
include!("StringLiteralParseError.rs");
include!("StringSoFar.rs");
include!("SubjectParseError.rs");
include!("UCHARParseError.rs");
include!("UCHARParser.rs");
